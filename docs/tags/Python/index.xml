<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>python on Witton的博客</title>
    <link>https://wittonbell.github.io/tags/python/</link>
    <description>Recent content in python on Witton的博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Tue, 28 Dec 2021 11:46:32 +0800</lastBuildDate><atom:link href="https://wittonbell.github.io/tags/python/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>ubuntu安装podman-compose</title>
      <link>https://wittonbell.github.io/posts/2021/2021-12-28-ubuntu%E5%AE%89%E8%A3%85podman-compose/</link>
      <pubDate>Tue, 28 Dec 2021 11:46:32 +0800</pubDate>
      
      <guid>https://wittonbell.github.io/posts/2021/2021-12-28-ubuntu%E5%AE%89%E8%A3%85podman-compose/</guid>
      <description>用过docker-compose的一定不会对podman-compose陌生，podman作为docker的替代品，自然</description>
    </item>
    
    <item>
      <title>解决ModuleNotFoundError: No module named ‘pkg_resources‘</title>
      <link>https://wittonbell.github.io/posts/2021/2021-08-25-%E8%A7%A3%E5%86%B3ModuleNotFoundError-No-module-named-pkg_resources/</link>
      <pubDate>Wed, 25 Aug 2021 10:24:50 +0800</pubDate>
      
      <guid>https://wittonbell.github.io/posts/2021/2021-08-25-%E8%A7%A3%E5%86%B3ModuleNotFoundError-No-module-named-pkg_resources/</guid>
      <description>今天使用pacman -Syuu升级了一下msys2的MinGW64，结果出现了Python不能正常使用的情况，升级之前都</description>
    </item>
    
    <item>
      <title>解决：pip is configured with locations that require TLS/SSL</title>
      <link>https://wittonbell.github.io/posts/2020/2020-10-29-%E8%A7%A3%E5%86%B3pip-is-configured-with-locations-that-require-TLS_SSL/</link>
      <pubDate>Thu, 29 Oct 2020 10:14:52 +0800</pubDate>
      
      <guid>https://wittonbell.github.io/posts/2020/2020-10-29-%E8%A7%A3%E5%86%B3pip-is-configured-with-locations-that-require-TLS_SSL/</guid>
      <description>在使用pip进行软件包安装的时候出现问题： 1WARNING: pip is configured with locations that require TLS/SSL, however the ssl module in Python is not available. 解决： 1mkdir -p ~/.pip 2vim ~/.pip/pip.conf 然后输入内容： 1[global] 2index-url = http://mirrors.aliyun.com/pypi/simple/ 3 4[install]</description>
    </item>
    
    <item>
      <title>使用Python实现XML文件转为Excel文件</title>
      <link>https://wittonbell.github.io/posts/2019/2019-09-02-%E4%BD%BF%E7%94%A8Python%E5%AE%9E%E7%8E%B0XML%E6%96%87%E4%BB%B6%E8%BD%AC%E4%B8%BAExcel%E6%96%87%E4%BB%B6/</link>
      <pubDate>Mon, 02 Sep 2019 16:21:38 +0800</pubDate>
      
      <guid>https://wittonbell.github.io/posts/2019/2019-09-02-%E4%BD%BF%E7%94%A8Python%E5%AE%9E%E7%8E%B0XML%E6%96%87%E4%BB%B6%E8%BD%AC%E4%B8%BAExcel%E6%96%87%E4%BB%B6/</guid>
      <description>由于项目组中原来的文件使用的XML格式作为配置，扩展性很好，但是阅读起来不是很直观，编辑起来也是不很方便，特别一些规则的</description>
    </item>
    
    <item>
      <title>CentOS python2升级到python3后的注意事项</title>
      <link>https://wittonbell.github.io/posts/2019/2019-05-26-CentOS-python2%E5%8D%87%E7%BA%A7%E5%88%B0python3%E5%90%8E%E7%9A%84%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9/</link>
      <pubDate>Sun, 26 May 2019 18:27:39 +0800</pubDate>
      
      <guid>https://wittonbell.github.io/posts/2019/2019-05-26-CentOS-python2%E5%8D%87%E7%BA%A7%E5%88%B0python3%E5%90%8E%E7%9A%84%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9/</guid>
      <description>由于CentOS系统默认使用的是Python2，升级到Python3后原来的一些系统软件就不可用了，需要做一些处理。 首先</description>
    </item>
    
    <item>
      <title>CentOS 6.X安装GCC 9.1和LLVM/Clang 8.0</title>
      <link>https://wittonbell.github.io/posts/2019/2019-05-19-CentOS-6.X%E5%AE%89%E8%A3%85GCC-9.1%E5%92%8CLLVM_Clang-8.0/</link>
      <pubDate>Sun, 19 May 2019 23:24:23 +0800</pubDate>
      
      <guid>https://wittonbell.github.io/posts/2019/2019-05-19-CentOS-6.X%E5%AE%89%E8%A3%85GCC-9.1%E5%92%8CLLVM_Clang-8.0/</guid>
      <description>在Cent OS 6.X中要安装Clang 8.0必须要使用GCC 4.8及以上版本才能编译，但系统自带的是4.4.7版本的，看了</description>
    </item>
    
    <item>
      <title>使用自己的Python函数处理Protobuf中的字符串编码</title>
      <link>https://wittonbell.github.io/posts/2016/2016-11-04-%E4%BD%BF%E7%94%A8%E8%87%AA%E5%B7%B1%E7%9A%84Python%E5%87%BD%E6%95%B0%E5%A4%84%E7%90%86Protobuf%E4%B8%AD%E7%9A%84%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%BC%96%E7%A0%81/</link>
      <pubDate>Fri, 04 Nov 2016 19:03:00 +0800</pubDate>
      
      <guid>https://wittonbell.github.io/posts/2016/2016-11-04-%E4%BD%BF%E7%94%A8%E8%87%AA%E5%B7%B1%E7%9A%84Python%E5%87%BD%E6%95%B0%E5%A4%84%E7%90%86Protobuf%E4%B8%AD%E7%9A%84%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%BC%96%E7%A0%81/</guid>
      <description>我目前所在的项目是一个老项目，里面的字符串编码有点乱，数据库中有些是GB2312，有些是UTF8；代码中有些是GBK，有</description>
    </item>
    
  </channel>
</rss>
